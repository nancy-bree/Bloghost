@model Bloghost.Core.Entities.Entry

@{
    ViewBag.Title = "_EntryTemplate";
}

<link rel="stylesheet" href="@Url.Content("~/Content/themes/base/jquery-ui.css")" />
<script src="@Url.Content("~/Scripts/jquery-ui-1.10.3.min.js")"></script>

@helper Truncate (string inputStr, int length)
{
    inputStr = System.Text.RegularExpressions.Regex.Replace(inputStr, @"<[^>]*(>|$)", String.Empty);
    inputStr = System.Text.RegularExpressions.Regex.Replace(inputStr, @"[\s\r\n]+", " ");
    inputStr = inputStr.Trim();
    
    if (inputStr.Length < length)
    {
        @inputStr
    }
    else
    {
        @inputStr.Substring(0, length)<text>...</text>
    }
}

@helper MonthHelper (DateTime dt)
{
    @dt.ToString("MMM", System.Globalization.CultureInfo.CreateSpecificCulture("en-US"))
}

@helper CommentsCountHelper (IList<Bloghost.Core.Entities.Comment> list)
{
    @list.Count
}

	<div class="post-block">
		<div class="post-info">
			<div class="day">@Html.DisplayFor(x => Model.CreatedDate.Day)</div>
			<div class="month">@MonthHelper(Model.CreatedDate)</div>
			<div class="time">@Html.DisplayFor(x => Model.CreatedDate.TimeOfDay)</div>
			<div class="author">@Html.DisplayFor(x => Model.Blog.User.Name) @Html.DisplayFor(x => Model.Blog.User.Surname)</div>
			<div class="comments">comments: @CommentsCountHelper(Model.Comments)</div>
            @if (User.Identity.IsAuthenticated && (Model.Blog.User.ID == (Guid)Membership.GetUser().ProviderUserKey))
            {
                <div class="edit-delete">
                    @Html.ActionLink("Edit", "Edit", "Entry",  new { id = Model.ID}, null) |
                    @Html.ActionLink("Delete", "Delete", "Entry",  new { id = Model.ID}, new { @class = "delete-link", id = Model.ID})
                </div>
            }
		</div>
		<div class="post-content">
			<div class="post-content-inner">
				<h2 class="post-title">@Html.ActionLink(Model.Title, "Entry",  "Entry", new { id = Model.ID}, null)
                @if (Model.Modified != null)
                {
                    <em style="font-size:12px; color:#b0b0b0;"> - edited: @Model.Modified</em>
                }
                </h2>
                <p>@Truncate(Model.EntryBody, 197)</p>
                @if (Model.Tags.Count > 0)
                {
				    <em class="tags">Tags: 
                        @Html.Raw(String.Join(", ", Model.Tags
                        .Select(tag => @Html.ActionLink(tag.Name, "Index", "Tag", new { id = tag.ID}, null).ToHtmlString()).ToArray()))
				    </em>
                }
			</div>
		</div>
	</div>

@*<script type="text/javascript">
    $(document).ready(function () {
        $('a.delete-link').click(OnDeleteClick);
    });
    function OnDeleteClick(e) {
        var entryId = e.target.id;
        var flag = confirm('You are about to delete this entry permanently. Are you sure you want to delete this one?');
        if (flag) {
            $.ajax({
                url: '/Entry/Delete',
                type: 'post',
                data: { id: entryId },
                dataType: 'json',
                success: function (result) { alert(result); /*$("#" + entryId).closest('div').parent().parent().remove();*/ },
                error: function () { alert('Error!'); }
            });
        }
        return false;
    }
</script>*@